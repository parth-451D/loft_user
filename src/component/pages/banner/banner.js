/* eslint-disable jsx-a11y/img-redundant-alt */
import React, { useState } from "react";
import DatePicker from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import { useNavigate } from "react-router-dom";

const Banner = () => {
  const [checkInDate, setCheckInDate] = useState(null);
  const [checkOutDate, setCheckOutDate] = useState(null);
  const [guests, setGuests] = useState(null);
  const navigate = useNavigate();

  return (
    <div className="container mx-auto comman-padding">
      <div className="home-banner top">
        <p>Find your perfect </p>
        <p>place to stay</p>
      </div>

      <div className="flex justify-center sm:justify-between lg:justify-center">
        <div className="checkBox top">
          <div className="check-in w-full flex items-center">
            <div className="flex items-center comman-grey checkIn-box ">
              <div className="flex items-center">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_127_1432)">
                    <g opacity="0.5">
                      <path
                        d="M9.23454 0.0648804C8.40022 0.28532 7.65963 0.890354 7.28934 1.65485C6.98935 2.27865 6.98467 2.29272 6.98467 5.41169V8.22581L7.10185 8.46501C7.27996 8.81677 7.51901 8.96686 7.94087 8.98562C8.2221 8.99969 8.30647 8.98562 8.48459 8.88712C8.60177 8.82615 8.76113 8.68544 8.83613 8.57757L8.97675 8.37589L9.00018 5.58054C9.02362 2.97749 9.02831 2.76643 9.11268 2.60696C9.22986 2.36776 9.52047 2.11449 9.74545 2.05352C9.87201 2.02069 11.6813 2.01131 15.5951 2.016L21.2573 2.03007L21.4776 2.16139C21.6229 2.24582 21.7448 2.36776 21.8292 2.51316L21.9604 2.7336V11.9967V21.2598L21.8292 21.4803C21.7448 21.6257 21.6229 21.7476 21.4776 21.832L21.2573 21.9634L15.5951 21.9774C11.6813 21.9821 9.87201 21.9727 9.74545 21.9399C9.52047 21.8789 9.22986 21.6257 9.11268 21.3865C9.02831 21.227 9.02362 21.0159 9.00018 18.4223C8.97675 15.3877 8.98612 15.5003 8.70957 15.2517C8.48927 15.0453 8.30178 14.9891 7.94555 15.0078C7.51433 15.0266 7.27528 15.1767 7.10185 15.5378L6.97998 15.7817L6.99404 18.7084L7.0081 21.6351L7.13466 21.9774C7.45808 22.8686 8.09086 23.5064 8.99081 23.8582L9.30485 23.9801L15.3655 23.9942C22.0682 24.0083 21.7214 24.0224 22.3494 23.7034C22.9635 23.3939 23.4181 22.9389 23.7087 22.3386C24.0181 21.7054 23.9994 22.4511 23.9994 11.9967C23.9994 1.41566 24.0275 2.27396 23.6666 1.57981C23.3197 0.918495 22.7291 0.397884 22.0167 0.135233L21.6792 0.0132885L15.5858 0.00390816C10.3876 -0.00547218 9.45484 0.00390816 9.23454 0.0648804Z"
                        fill="#251204"
                      />
                      <path
                        d="M12.7399 8.02912C12.2853 8.15106 11.9993 8.52159 11.9993 8.98592C11.9993 9.38458 12.0931 9.52998 12.8337 10.271L13.5227 10.9652H7.19023C0.253111 10.9652 0.614029 10.9511 0.314045 11.2372C0.0984321 11.4436 0 11.6781 0 11.997C0 12.466 0.27186 12.8459 0.698399 12.9773C0.829642 13.0148 2.59673 13.0289 7.19492 13.0289H13.518L12.7868 13.7652C12.1165 14.45 12.0556 14.525 12.004 14.7502C11.9243 15.0691 11.9712 15.3224 12.154 15.5944C12.4024 15.9555 12.843 16.1056 13.2977 15.9837C13.5039 15.9274 13.6633 15.782 15.1726 14.2811C16.1054 13.3525 16.86 12.5645 16.9022 12.4707C17.0147 12.2409 17.0381 11.9407 16.9678 11.6828C16.9116 11.4764 16.7663 11.3169 15.2851 9.82546C14.3945 8.92495 13.5883 8.15106 13.4993 8.10885C13.2696 7.9916 12.9977 7.96346 12.7399 8.02912Z"
                        fill="#251204"
                      />
                    </g>
                  </g>
                  <defs>
                    <clipPath id="clip0_127_1432">
                      <rect width="24" height="24" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
                <div className="ml-3">
                  <DatePicker
                    selected={checkInDate}
                    onChange={(date) => setCheckInDate(date)}
                    placeholderText="Check-in"
                    minDate={new Date()}
                  />
                </div>
              </div>
              <div>
                <p>|</p>
              </div>
              <div className="flex items-center">
                <svg
                  width="24"
                  height="24"
                  viewBox="0 0 24 24"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                  className="ml-3"
                >
                  <g clip-path="url(#clip0_127_1440)">
                    <g opacity="0.5">
                      <path
                        d="M9.23117 0.0639629C8.39664 0.28441 7.65588 0.889467 7.2855 1.654C6.98545 2.27782 6.98076 2.29189 6.98076 5.41098V8.2252L7.09797 8.46441C7.27613 8.81619 7.51523 8.96628 7.93718 8.98504C8.21848 8.99911 8.30287 8.98504 8.48103 8.88654C8.59824 8.82557 8.75764 8.68486 8.83266 8.57698L8.97331 8.37529L8.99675 5.57983C9.02019 2.97668 9.02488 2.76562 9.10927 2.60614C9.22648 2.36693 9.51716 2.11365 9.7422 2.05268C9.86878 2.01985 11.6785 2.01047 15.5932 2.01516L21.2568 2.02923L21.4771 2.16056C21.6225 2.24498 21.7444 2.36693 21.8287 2.51233L21.96 2.73278V11.9963V21.2597L21.8287 21.4802C21.7444 21.6256 21.6225 21.7475 21.4771 21.832L21.2568 21.9633L15.5932 21.9774C11.6785 21.982 9.86878 21.9727 9.7422 21.9398C9.51716 21.8789 9.22648 21.6256 9.10927 21.3864C9.02488 21.2269 9.02019 21.0158 8.99675 18.4221C8.97331 15.3874 8.98268 15.5 8.70607 15.2514C8.48572 15.045 8.29819 14.9887 7.94187 15.0075C7.51055 15.0262 7.27144 15.1763 7.09797 15.5375L6.97607 15.7814L6.99014 18.7082L7.0042 21.635L7.13079 21.9774C7.45429 22.8685 8.08721 23.5064 8.98737 23.8582L9.30149 23.9801L15.3635 23.9942C22.0678 24.0083 21.7209 24.0224 22.3491 23.7034C22.9633 23.3938 23.4181 22.9389 23.7088 22.3385C24.0182 21.7053 23.9994 22.4511 23.9994 11.9963C23.9994 1.41479 24.0276 2.27313 23.6666 1.57895C23.3196 0.91761 22.7289 0.39698 22.0163 0.134319L21.6787 0.0123692L15.5839 0.00298882C10.3845 -0.00639153 9.45152 0.00298882 9.23117 0.0639629Z"
                        fill="#251204"
                      />
                      <path
                        d="M3.62878 8.03383C3.3803 8.12764 0.220352 11.2655 0.0843902 11.5516C-0.0281301 11.7955 -0.0281301 12.1989 0.0843902 12.4428C0.206287 12.7054 3.37561 15.8621 3.61471 15.9605C4.1023 16.1622 4.67428 15.9418 4.92276 15.4587C5.03059 15.2429 5.03997 14.8302 4.94151 14.591C4.89463 14.4878 4.58989 14.136 4.182 13.7232L3.49282 13.0291L9.8924 13.0197L16.2873 13.0056L16.4983 12.8884C16.6108 12.8227 16.7702 12.6773 16.8499 12.5694C16.9765 12.3818 16.9906 12.3302 16.9906 11.9972C16.9906 11.6642 16.9765 11.6126 16.8499 11.425C16.7702 11.3171 16.6108 11.1717 16.4983 11.106L16.2873 10.9888L9.8924 10.9747L3.4975 10.9653L4.20076 10.2477C4.97902 9.4597 5.03528 9.3612 5.00246 8.89686C4.97902 8.55915 4.80086 8.27304 4.5055 8.11357C4.25702 7.97285 3.87726 7.94002 3.62878 8.03383Z"
                        fill="#251204"
                      />
                    </g>
                  </g>
                  <defs>
                    <clipPath id="clip0_127_1440">
                      <rect width="24" height="24" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
                <div className="ml-3">
                  <DatePicker
                    selected={checkOutDate}
                    onChange={(date) => setCheckOutDate(date)}
                    placeholderText="Check-out"
                    minDate={checkInDate || new Date()}
                  />
                </div>
              </div>
            </div>
            <div
              className="flex items-center comman-grey checkIn-box mx-2 "
              style={{ width: "40%" }}
            >
              <svg
                width="24"
                height="24"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  opacity="0.5"
                  d="M21.1313 18.8681C21.9026 19.2376 22.5401 19.7571 23.0438 20.4268C23.5475 21.0964 23.8662 21.8507 24 22.6897H22.7014C22.6149 22.2509 22.4535 21.843 22.2174 21.4658C21.9813 21.0887 21.694 20.7654 21.3556 20.496C21.0172 20.2266 20.6355 20.0111 20.2105 19.8495C19.7855 19.6879 19.3448 19.6109 18.8883 19.6186C18.424 19.6186 17.9833 19.6956 17.5662 19.8495C17.149 20.0034 16.7673 20.2151 16.4211 20.4845C16.0748 20.7539 15.7875 21.081 15.5593 21.4658C15.331 21.8507 15.1697 22.2586 15.0753 22.6897H13.7767C13.9026 21.8584 14.2174 21.1079 14.7211 20.4383C15.2248 19.7687 15.8662 19.2453 16.6454 18.8681C16.1968 18.5218 15.8505 18.1023 15.6065 17.6097C15.3625 17.1171 15.2366 16.5937 15.2287 16.0395C15.2287 15.6932 15.2759 15.3583 15.3704 15.0351C15.4648 14.7118 15.6065 14.4078 15.7954 14.123C15.9843 13.8382 16.2086 13.5842 16.4683 13.361C16.728 13.1378 17.0192 12.9492 17.3419 12.7953C17.1294 12.4951 16.8854 12.2296 16.6099 11.9986C16.3345 11.7677 16.0354 11.5638 15.7127 11.3867C15.3901 11.2097 15.0516 11.0827 14.6975 11.0057C14.3433 10.9288 13.9774 10.8826 13.5996 10.8672C12.97 10.8672 12.3679 10.9865 11.7934 11.2251C11.2189 11.4637 10.7191 11.8139 10.2941 12.2757C10.483 12.776 10.5775 13.2917 10.5775 13.8228C10.5775 14.5309 10.4161 15.1967 10.0935 15.8202C9.77078 16.4436 9.31825 16.967 8.73586 17.3903C9.24742 17.6443 9.70782 17.9561 10.1171 18.3255C10.5263 18.695 10.8805 19.1106 11.1795 19.5724C11.4786 20.0342 11.7029 20.5268 11.8524 21.0502C12.002 21.5736 12.0807 22.1201 12.0885 22.6897H10.5775C10.5775 22.0816 10.4594 21.5082 10.2233 20.9694C9.98721 20.4306 9.66454 19.9611 9.25529 19.5609C8.84604 19.1606 8.36203 18.8412 7.80325 18.6026C7.24447 18.364 6.65814 18.2485 6.04427 18.2562C5.41466 18.2562 4.82833 18.3717 4.28529 18.6026C3.74225 18.8335 3.26217 19.1491 2.84506 19.5493C2.42794 19.9496 2.10133 20.4229 1.86522 20.9694C1.62912 21.5159 1.51107 22.0893 1.51107 22.6897H0C0 22.1278 0.0787014 21.5851 0.236104 21.0618C0.393507 20.5384 0.617806 20.0458 0.909001 19.584C1.2002 19.1221 1.55042 18.7065 1.95967 18.3371C2.36891 17.9676 2.83325 17.652 3.35268 17.3903C2.77029 16.967 2.31776 16.4436 1.99508 15.8202C1.67241 15.1967 1.51107 14.5309 1.51107 13.8228C1.51107 13.2148 1.62912 12.6413 1.86522 12.1026C2.10133 11.5638 2.424 11.0943 2.83325 10.694C3.2425 10.2938 3.72258 9.97436 4.27349 9.73576C4.8244 9.49715 5.41466 9.3817 6.04427 9.38939C6.71323 9.38939 7.34678 9.52794 7.94491 9.80503C8.54304 10.0821 9.06247 10.467 9.5032 10.9596C9.70782 10.7671 9.92818 10.594 10.1643 10.44C10.4004 10.2861 10.6483 10.1398 10.908 10.0013C10.3256 9.57797 9.87309 9.05458 9.55042 8.43113C9.22774 7.80768 9.0664 7.1419 9.0664 6.43378C9.0664 5.82573 9.18446 5.25231 9.42056 4.71352C9.65666 4.17474 9.97934 3.70523 10.3886 3.30499C10.7978 2.90475 11.2779 2.58533 11.8288 2.34672C12.3797 2.10812 12.97 1.99266 13.5996 2.00036C14.2213 2.00036 14.8077 2.11581 15.3586 2.34672C15.9095 2.57763 16.3896 2.8932 16.7988 3.29344C17.2081 3.69368 17.5347 4.16704 17.7787 4.71352C18.0226 5.26 18.1407 5.83342 18.1328 6.43378C18.1328 7.1419 17.9715 7.80768 17.6488 8.43113C17.3261 9.05458 16.8736 9.57797 16.2912 10.0013C16.8421 10.2861 17.3379 10.6324 17.7787 11.0404C18.2194 11.4483 18.5932 11.9217 18.9001 12.4605C19.4038 12.4605 19.876 12.5528 20.3168 12.7376C20.7575 12.9223 21.1471 13.1801 21.4855 13.5111C21.8239 13.8421 22.0836 14.2192 22.2646 14.6425C22.4456 15.0659 22.5401 15.5315 22.548 16.0395C22.548 16.5937 22.426 17.1171 22.182 17.6097C21.938 18.1023 21.5878 18.5218 21.1313 18.8681ZM6.04427 16.7784C6.46139 16.7784 6.85096 16.7015 7.21299 16.5475C7.57501 16.3936 7.89769 16.1819 8.18101 15.9125C8.46434 15.6431 8.68077 15.3314 8.8303 14.9774C8.97983 14.6233 9.05853 14.2384 9.0664 13.8228C9.0664 13.4149 8.9877 13.0339 8.8303 12.6798C8.6729 12.3258 8.45647 12.0102 8.18101 11.7331C7.90556 11.456 7.58682 11.2444 7.22479 11.0981C6.86276 10.9519 6.46926 10.8749 6.04427 10.8672C5.62715 10.8672 5.23758 10.9442 4.87555 11.0981C4.51353 11.252 4.19085 11.4637 3.90753 11.7331C3.6242 12.0025 3.40777 12.3142 3.25824 12.6683C3.10871 13.0223 3.03 13.4072 3.02213 13.8228C3.02213 14.2308 3.10084 14.6117 3.25824 14.9658C3.41564 15.3199 3.63207 15.6354 3.90753 15.9125C4.18298 16.1896 4.50172 16.4013 4.86375 16.5475C5.22577 16.6938 5.61928 16.7707 6.04427 16.7784ZM10.5775 6.43378C10.5775 6.84172 10.6562 7.22271 10.8136 7.57677C10.971 7.93083 11.1874 8.2464 11.4629 8.52349C11.7383 8.80058 12.0571 9.01225 12.4191 9.15849C12.7811 9.30473 13.1746 9.3817 13.5996 9.38939C14.0167 9.38939 14.4063 9.31243 14.7683 9.15849C15.1303 9.00455 15.453 8.79288 15.7364 8.52349C16.0197 8.2541 16.2361 7.94238 16.3856 7.58832C16.5352 7.23426 16.6139 6.84941 16.6217 6.43378C16.6217 6.02585 16.543 5.64485 16.3856 5.29079C16.2282 4.93673 16.0118 4.62116 15.7364 4.34407C15.4609 4.06698 15.1422 3.85532 14.7801 3.70907C14.4181 3.56283 14.0246 3.48586 13.5996 3.47817C13.1825 3.47817 12.7929 3.55514 12.4309 3.70907C12.0689 3.86301 11.7462 4.07468 11.4629 4.34407C11.1795 4.61346 10.9631 4.92519 10.8136 5.27924C10.664 5.6333 10.5853 6.01815 10.5775 6.43378ZM18.8883 13.7074C18.5578 13.7074 18.2509 13.7689 17.9675 13.8921C17.6842 14.0152 17.4324 14.1807 17.212 14.3885C16.9916 14.5964 16.8185 14.8427 16.6926 15.1274C16.5667 15.4122 16.5037 15.7163 16.5037 16.0395C16.5037 16.3628 16.5667 16.663 16.6926 16.9401C16.8185 17.2172 16.9877 17.4635 17.2002 17.679C17.4127 17.8945 17.6645 18.0638 17.9557 18.187C18.2469 18.3101 18.5578 18.3717 18.8883 18.3717C19.2189 18.3717 19.5258 18.3101 19.8091 18.187C20.0925 18.0638 20.3443 17.8983 20.5647 17.6905C20.785 17.4827 20.9582 17.2364 21.0841 16.9516C21.21 16.6668 21.273 16.3628 21.273 16.0395C21.273 15.7163 21.21 15.4161 21.0841 15.139C20.9582 14.8619 20.789 14.6156 20.5765 14.4001C20.364 14.1846 20.1122 14.0152 19.821 13.8921C19.5298 13.7689 19.2189 13.7074 18.8883 13.7074Z"
                  fill="#251204"
                />
              </svg>
              <select
                className="select"
                value={guests}
                onChange={(e) => setGuests(e.target.value)}
              >
                <option value="">Select Guests</option>
                <option value="1"> 1</option>
                <option value="2"> 2</option>
                <option value="3"> 3</option>
                <option value="4"> 4</option>
                <option value="5"> 5</option>
                <option value="6"> 6</option>
              </select>
            </div>
            <div
              className="cursor"
              onClick={() => {
                localStorage.setItem(
                  "dateInfo",
                  JSON.stringify({
                    checkInDate: checkInDate,
                    checkOutDate: checkOutDate,
                    guests: guests,
                  })
                );
                navigate("/property");
              }}
            >
              <svg
                width="60"
                height="60"
                viewBox="0 0 60 60"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <rect width="60" height="60" rx="8" fill="#1C445F" />
                <path
                  d="M40.9089 40.6304L34.5604 34.2819C36.086 32.4504 36.8468 30.1013 36.6844 27.7232C36.5221 25.3451 35.4492 23.1211 33.6889 21.5139C31.9286 19.9067 29.6164 19.04 27.2334 19.0942C24.8504 19.1483 22.58 20.1191 20.8945 21.8046C19.209 23.4901 18.2382 25.7605 18.184 28.1435C18.1299 30.5266 18.9966 32.8387 20.6037 34.599C22.2109 36.3593 24.4349 37.4323 26.813 37.5946C29.1911 37.7569 31.5403 36.9962 33.3718 35.4706L39.7203 41.8191L40.9089 40.6304ZM19.893 28.3689C19.893 26.8725 20.3367 25.4098 21.168 24.1656C21.9994 22.9214 23.181 21.9517 24.5634 21.379C25.9459 20.8064 27.4671 20.6566 28.9347 20.9485C30.4023 21.2404 31.7504 21.961 32.8085 23.0191C33.8666 24.0772 34.5872 25.4253 34.8791 26.8929C35.171 28.3605 35.0212 29.8817 34.4485 31.2642C33.8759 32.6466 32.9062 33.8282 31.662 34.6596C30.4178 35.4909 28.9551 35.9346 27.4587 35.9346C25.4528 35.9324 23.5298 35.1346 22.1114 33.7162C20.693 32.2978 19.8952 30.3747 19.893 28.3689Z"
                  fill="#FFFAF6"
                />
              </svg>
            </div>
          </div>
        </div>
      </div>

      <div className="w-full top flex">
        <div>
          <img src="/images/room5.png" alt="Image 1" className="mt-2" />
        </div>
        <div className="mx-4">
          <img src="/images/room1.png" alt="Image 2" />
          <img src="/images/room.png" alt="Image 3" className="mt-2" />
        </div>
        <div>
          <img src="/images/main.png" alt="Image 4" />
        </div>
        <div className="mx-4">
          <img src="/images/room4.png" alt="Image 5" />
          <img src="/images/room6.png" alt="Image 6" className="mt-2" />
        </div>
        <div>
          <img src="/images/room5.png" alt="Image 7" className="mt-2" />
        </div>
      </div>
    </div>
  );
};

export default Banner;
